{"version":3,"file":"client.js","sources":["webpack://dmn-client-extension/./client/TestDMNEditorEvents.js","webpack://dmn-client-extension/./client/dmn-modeler-extension/TestEditorEventsLogger.js","webpack://dmn-client-extension/./client/dmn-modeler-extension/index.js","webpack://dmn-client-extension/./node_modules/camunda-modeler-plugin-helpers/index.js","webpack://dmn-client-extension/./node_modules/camunda-modeler-plugin-helpers/react.js","webpack://dmn-client-extension/webpack/bootstrap","webpack://dmn-client-extension/webpack/runtime/compat get default export","webpack://dmn-client-extension/webpack/runtime/define property getters","webpack://dmn-client-extension/webpack/runtime/hasOwnProperty shorthand","webpack://dmn-client-extension/webpack/runtime/make namespace object","webpack://dmn-client-extension/./client/index.js"],"sourcesContent":["/**\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership.\n *\n * Camunda licenses this file to you under the MIT; you may not use this file\n * except in compliance with the MIT License.\n */\n\nimport { PureComponent } from 'camunda-modeler-plugin-helpers/react';\n\nimport DmnModelerExtension from './dmn-modeler-extension';\n\n\n/**\n * An extension that shows how to hook into\n * editor events to accomplish the following:\n *\n * - hook into <dmn.modeler.configure> to provide a bpmn.modeler extension\n * - hook into <dmn.modeler.created> to register for bpmn.modeler events\n * - hook into <tab.saved> to perform a post-safe action\n *\n */\nexport default class TestDMNEditorEvents extends PureComponent {\n\n  constructor(props) {\n\n    super(props);\n\n    const {\n      subscribe\n    } = props;\n\n    subscribe('dmn.modeler.configure', (event) => {\n\n      const {\n        tab,\n        middlewares\n      } = event;\n\n      log('Creating editor for tab', tab);\n\n      middlewares.push(addModule(DmnModelerExtension));\n    });\n\n\n    subscribe('dmn.modeler.created', (event) => {\n\n      const {\n        tab,\n        modeler,\n      } = event;\n\n      log('Modeler created for tab', tab);\n\n      modeler.on('saveXML.start', (event) => {\n\n        const {\n          definitions\n        } = event;\n\n        log('Saving XML with definitions', definitions, tab);\n      });\n\n    });\n\n\n    subscribe('tab.saved', (event) => {\n      const {\n        tab\n      } = event;\n\n      log('Tab saved', tab);\n    });\n\n  }\n\n  render() {\n    return null;\n  }\n}\n\n\n// helpers //////////////\n\nfunction log(...args) {\n  console.log('[TestEditorEvents]', ...args);\n}\n\n/**\n * Returns a bpmn.modeler.configure middleware\n * that adds the specific module.\n *\n * @param {didi.Module} extensionModule\n *\n * @return {Function}\n */\nfunction addModule(extensionModule) {\n\n  return (config) => {\n\n    const additionalModules = config.drd.additionalModules || [];\n\n    return {\n      ...config,\n      drd: {\n        additionalModules: [\n          ...additionalModules,\n          extensionModule\n        ]\n      }\n    };\n  };\n}\n","/**\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership.\n *\n * Camunda licenses this file to you under the MIT; you may not use this file\n * except in compliance with the MIT License.\n */\n\nfunction EditorEventsLogger(eventBus) {\n\n  eventBus.on('shape.added', function(event) {\n    console.log('[EditorEventsLogger]', 'shape got added', event);\n  });\n\n}\n\nEditorEventsLogger.$inject = [ 'eventBus' ];\n\nmodule.exports = EditorEventsLogger;","/**\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership.\n *\n * Camunda licenses this file to you under the MIT; you may not use this file\n * except in compliance with the MIT License.\n */\n\nimport TestEditorEventsLogger from './TestEditorEventsLogger';\n\nexport default {\n  __init__: [ 'testEditorEventsLogger' ],\n  testEditorEventsLogger: [ 'type', TestEditorEventsLogger ]\n};\n","/**\n * Validate and register a client plugin.\n *\n * @param {Object} plugin\n * @param {String} type\n */\nexport function registerClientPlugin(plugin, type) {\n  var plugins = window.plugins || [];\n  window.plugins = plugins;\n\n  if (!plugin) {\n    throw new Error('plugin not specified');\n  }\n\n  if (!type) {\n    throw new Error('type not specified');\n  }\n\n  plugins.push({\n    plugin: plugin,\n    type: type\n  });\n}\n\n/**\n * Validate and register a client plugin.\n *\n * @param {import('react').ComponentType} extension\n *\n * @example\n *\n * import MyExtensionComponent from './MyExtensionComponent';\n *\n * registerClientExtension(MyExtensionComponent);\n */\nexport function registerClientExtension(component) {\n  registerClientPlugin(component, 'client');\n}\n\n/**\n * Validate and register a bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.modeler.additionalModules');\n}\n\n/**\n * Validate and register a bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.modeler.moddleExtension');\n}\n\n/**\n * Return the modeler directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getModelerDirectory() {\n  return window.getModelerDirectory();\n}\n\n/**\n * Return the modeler plugin directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getPluginsDirectory() {\n  return window.getPluginsDirectory();\n}","if (!window.react) {\n  throw new Error('Not compatible with Camunda Modeler < 3.4');\n}\n\n/**\n * React object used by Camunda Modeler. Use it to create UI extension.\n *\n * @type {import('react')}\n */\nmodule.exports = window.react;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership.\n *\n * Camunda licenses this file to you under the MIT; you may not use this file\n * except in compliance with the MIT License.\n */\n\nimport { registerClientExtension } from 'camunda-modeler-plugin-helpers';\n\nimport TestDMNEditorEvents from './TestDMNEditorEvents';\n\nregisterClientExtension(TestDMNEditorEvents);\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AADA;AAIA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AAGA;AACA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAzDA;AACA;AA6DA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AAEA;AAEA;AAEA;AACA;AADA;AAFA;AASA;AACA;AACA;A;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;A;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AACA;A;;;;;;;;;;;;;;;;;;ACbvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;;;A","sourceRoot":""}